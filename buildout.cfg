[buildout]
parts = eggs-paste eggs activate modwsgi template print-war jsbuild cssbuild msgfmt
develop = .
newest = false
prefer-final = true
extensions = buildout.dumppickedversions
versions = versions

develop-eggs-directory = buildout/develop-eggs
eggs-directory = buildout/eggs
parts-directory = buildout/parts
bin-directory = buildout/bin

[versions]
# list of the dependencies versions
# (to be copied from the dumppickedversions output)

[vars]
host = http://mf-chsdi0t.bgdi.admin.ch
# project instance id
instanceid =
wsgi_base = /${vars:instanceid}
# database user
dbuser = www-data
# database password
dbpassword = www-data
# database host
dbhost = localhost
# database port
dbport = 5432

[eggs-paste]
recipe = zc.recipe.egg
eggs =
    Chsdi
dependent-scripts = true
initialization =
    import paste.script.command
    for egg in ['MapFish', 'PasteScript', 'Pylons', 'Chsdi']: paste.script.command.system_plugins.append(egg)
    from pkg_resources import working_set
    working_set.entries=[]; map(working_set.add_entry,sys.path)

[eggs]
recipe = zc.recipe.egg
eggs =
    Sphinx
    JSTools
dependent-scripts = true
interpreter = python
initialization =
    from pkg_resources import working_set
    working_set.entries=[]; map(working_set.add_entry,sys.path)


[activate]
recipe = evg.recipe.activate

[modwsgi]
recipe = collective.recipe.modwsgi
eggs = Chsdi
config-file = ${buildout:directory}/production.ini

[template]
recipe = z3c.recipe.filetemplate
source-directory = .
extends = vars
interpreted-options = api-version
api-version = __import__('datetime').datetime.today().strftime('%d%m%y%H%M')

[jsbuild]
recipe = JSTools:buildjs
resource-dir = jsbuild
config = ${buildout:directory}/jsbuild/api.cfg
output-dir = chsdi/public/build
compress = True

[cssbuild]
recipe = c2c.recipe.cssmin
input = 
      chsdi/public/lib/ext/Ext/resources/css/ext-all.css
      chsdi/public/lib/ext/Ext/resources/css/xtheme-gray.css
      chsdi/public/lib/geoext/resources/css/gxtheme-gray.css
      chsdi/public/lib/openlayers/theme/default/style.css
      chsdi/public/GeoAdmin.ux/css/geoadmin.css
      chsdi/public/GeoAdmin.ux/Map/css/map.css
      chsdi/public/GeoAdmin.ux/BodSearch/css/bodsearch.css
      chsdi/public/GeoAdmin.ux/BaseLayerTool/css/baselayertool.css
      chsdi/public/GeoAdmin.ux/LayerTree/css/layertree.css
      chsdi/public/GeoAdmin.ux/CatalogTree/css/catalogtree.css
      chsdi/public/GeoAdmin.ux/Features/css/tooltip.css
      chsdi/public/GeoAdmin.ux/NavigationHistory/css/navigationhistory.css

output = chsdi/public/build/api.css

[msgfmt]
recipe = c2c.recipe.msgfmt
po-directory = chsdi/i18n/

[jst]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    buildout/bin/python jst/jst.py jst/jst.cfg

[doc]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    cd chsdi/public/doc && ../../../buildout/bin/sphinx-build -b html source build

[print]
recipe = iw.recipe.fetcher
base_url = http://dev.mapfish.org/maven/repository/org/mapfish/print/
basewar = print-servlet-1.2-SNAPSHOT.war
files = print-servlet/1.2-SNAPSHOT/${print:basewar}

[print-war]
recipe = c2c.recipe.jarfile
mode = update
basedir = print/
input = ${print:basewar} config.yaml print_logo.png WEB-INF
output = /srv/tomcat/tomcat1/webapps/print-chsdi-${vars:instanceid}.war
