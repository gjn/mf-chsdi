#
# The Apache mod_wsgi configuration file.
#
# We use mod_wsgi's daemon mode. And we assign a specific process
# group to the WSGI application.
#
# Note: once we use mod_wsgi 3 we'll be able to get rid of the
# Location block by passing process-group and application-group
# options to the WSGIScriptAlias directive.
#
ServerAlias demo.geo.admin.ch
ServerAlias height.geo.admin.ch
ServerAlias profile.geo.admin.ch
ServerAlias feature.geo.admin.ch
ServerAlias s.geo.admin.ch

RewriteEngine On
ExpiresActive On

AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE application/x-javascript application/javascript application/json
AddOutputFilterByType DEFLATE text/html text/plain text/xml

Header set Access-Control-Allow-Origin "*"

# height, feature, shorten and profile service
RewriteCond %{HTTP_HOST}   ^height.geo.admin.ch$
RewriteRule ^${vars:apache-entry-point}$ /${vars:instanceid}/wsgi/height [PT,QSA]

RewriteCond %{HTTP_HOST}   ^feature.geo.admin.ch$
RewriteRule ^${vars:apache-entry-point}(.*)$ /${vars:instanceid}/wsgi/feature/$1 [PT]

RewriteCond %{HTTP_HOST}   ^s.geo.admin.ch$
RewriteRule ^${vars:apache-entry-point}(.*)$ /${vars:instanceid}/wsgi/shorten/$1 [PT]

RewriteCond %{HTTP_HOST}   ^profile.geo.admin.ch$
RewriteCond %{QUERY_STRING} format=(json|csv)
RewriteRule ^${vars:apache-entry-point}$ /${vars:instanceid}/wsgi/profile.json [PT,QSA]

# Main entry point
RewriteCond %{HTTP:X-Forwarded-Proto} !=https
RewriteRule ^${vars:apache-entry-point}$ http://%{SERVER_NAME}/${vars:instanceid}/wsgi/doc/build/ [R=302,env=nocache:1,L]
RewriteCond %{HTTP:X-Forwarded-Proto} =https
RewriteRule ^${vars:apache-entry-point}$ https://%{SERVER_NAME}/${vars:instanceid}/wsgi/doc/build/ [R=302,env=nocache:1,L]
Header always set Cache-Control "no-store, no-cache, must-revalidate" env=nocache

# non cached urls:
RewriteRule ^/${vars:instanceid}/wsgi/(build|lib|GeoAdmin.ux|api|tests|doc|tileforge-doc|demo|capabilities)/(.*)$  ${buildout:directory}/chsdi/public/$1/$2
# demo
RewriteRule ^${vars:apache-entry-point}demo/(.*)$  ${buildout:directory}/chsdi/public/demo/$1 [L]

# legend urls
RewriteRule ^/${vars:instanceid}/wsgi/legend/(.*)$   ${buildout:directory}/chsdi/public/legend/$1
RewriteRule ^${vars:apache-entry-point}legend/(.*)$  ${buildout:directory}/chsdi/public/legend/$1

# cached urls:
RewriteRule ^/[0-9a-fA-F]*/${vars:instanceid}/wsgi/(build|lib|api|GeoAdmin.ux)/(.*)$  ${buildout:directory}/chsdi/public/$1/$2
<LocationMatch /[0-9a-fA-F]*/${vars:instanceid}/wsgi/(build|lib|api|GeoAdmin.ux)>
    ExpiresDefault "now plus 1 year"
    Header merge Cache-Control "public"
</LocationMatch>

# loader.js & crossdomaini.xml:
RewriteRule ^${vars:apache-entry-point}(loader.js|crossdomain.xml)$ /${vars:instanceid}/wsgi/$1$2 [PT]


# web services:
RewriteRule ^${vars:apache-entry-point}(zeitreihen|ogcproxy|cmslayer|maps|layers|feature|publishers|swisssearch|profile.json|profile.csv|height|checker|sanity|geocatsearch|qrcodegenerator|demo|shorten|bodsearch)(.*)$ /${vars:instanceid}/wsgi/$1$2 [PT]

# WMTS new-style (does not handle GetTile any more)
ServerAlias wmts.geo.admin.ch
ServerAlias wmts0.geo.admin.ch
ServerAlias wmts1.geo.admin.ch
ServerAlias wmts2.geo.admin.ch
ServerAlias wmts3.geo.admin.ch
ServerAlias wmts4.geo.admin.ch
ServerAlias wmts.swisstopo.admin.ch

# WMTS and ssWMTS
# Legacy service not used anymore since 30.11.2011
RewriteRule ^${vars:apache-entry-point}wmts/WMTSCapabilities\.xml - [G,L]
# GetCapabilities for WMTS (used by swissmap online)
RewriteCond %{HTTP_HOST}   ^wmts.swisstopo.admin.ch$
RewriteRule ^${vars:apache-entry-point}1.0.0/WMTSCapabilities\.xml$ /${vars:instanceid}/wsgi/wmts?mode=swisstopowmts [PT,NC,QSA,L]
# Frozen Capabilities, for swissmaponline 
RewriteCond %{QUERY_STRING} lang=(de|fr|it|en) [NC] 
RewriteRule ^${vars:apache-entry-point}1.0.0/WMTSCapabilities_v(.*)\.xml$ ${buildout:directory}/chsdi/public/capabilities/$1/WMTSCapabilities.%1.xml [NC,QSA,L]
RewriteRule ^${vars:apache-entry-point}1.0.0/WMTSCapabilities_v(.*)\.xml$ ${buildout:directory}/chsdi/public/capabilities/$1/WMTSCapabilities.de.xml [NC,QSA,L]
# RewriteCond %{HTTP_HOST}   ^wmts[01234]?
RewriteRule ^${vars:apache-entry-point}1.0.0/WMTSCapabilities\.xml$ /${vars:instanceid}/wsgi/wmts [PT,NC,QSA,L]
RewriteRule ^${vars:apache-entry-point}1.0.0/legend/(.*)$  ${buildout:directory}/chsdi/public/legend/$1

# print
RewriteRule ^${vars:apache-entry-point}print/(.*)$ /main/wsgi/print/$1 [PT]

# define a process group
WSGIDaemonProcess mf-chsdi:${vars:instanceid} display-name=%{GROUP} user=${vars:modwsgi_user}

# define the path to the WSGI app
WSGIScriptAlias /${vars:instanceid}/wsgi ${buildout:directory/buildout/parts/modwsgi/wsgi}

# assign the WSGI app instance the process group defined aboven, we put the WSGI
# app instance in the global application group so it is always executed within
# the main interpreter
<Location /${vars:instanceid}/wsgi>
    WSGIProcessGroup mf-chsdi:${vars:instanceid}
    WSGIApplicationGroup %{GLOBAL}
</Location>

# never cache loader.js, demos, tests and everthing diretly accessed in GeoAdmin.ux (useful for unit tests)
<Location ~ "/${vars:instanceid}/wsgi/(loader.js|demo|tests|GeoAdmin.ux)(.*)?$">
    ExpiresDefault "access"
    Header merge Cache-Control "no-cache"
    Header unset ETag
    Header unset Last-Modified
</Location>

# Some services are not "free": TODO THIS IS A PROVISORY SOLUTION
SetEnvIf Referer "^http://mf-chmobil.bgdi.admin.ch"      GOODREF
SetEnvIf Referer "^http://mf-chmobil0i.bgdi.admin.ch"    GOODREF
SetEnvIf Referer "^http://mf-chmobil0t.bgdi.admin.ch"    GOODREF
SetEnvIf Referer "^http://mf-chmobil0t.lt.admin.ch"      GOODREF
SetEnvIf Referer "^http://mf-chsdi0i.bgdi.admin.ch"      GOODREF
SetEnvIf Referer "^http://mf-chsdi0t.bgdi.admin.ch"      GOODREF
SetEnvIf Referer "^http://mf-chsdi0t.lt.admin.ch"        GOODREF
SetEnvIf Referer "^http://mf-geoadmin2.bgdi.admin.ch"    GOODREF
SetEnvIf Referer "^http://mf-geoadmin20i.bgdi.admin.ch"  GOODREF
SetEnvIf Referer "^http://mf-geoadmin20t.bgdi.admin.ch"  GOODREF
SetEnvIf Referer "^http://mf-geoadmin20t.lt.admin.ch"    GOODREF
SetEnvIf Referer "^http://map.schweizmobil.ch"           GOODREF
SetEnvIf Referer "^http://map.wanderland.ch"             GOODREF
SetEnvIf Referer "^http://map.veloland.ch"               GOODREF
SetEnvIf Referer "^http://map.mountainbikeland.ch"       GOODREF
SetEnvIf Referer "^http://map.kanuland.ch"               GOODREF
SetEnvIf Referer "^http://map.skatingland.ch"            GOODREF
SetEnvIf Referer "^http://dev.geoext.org"                GOODREF
SetEnvIf Referer ".admin.ch"                             GOODREF
SetEnvIf Referer "^http://localhost"                     GOODREF

SetEnvIf X-Forwarded-For "10.226.126.116"                GOODIP
SetEnvIf X-Forwarded-For "10.227.67.80"                  GOODIP
SetEnvIf X-Forwarded-For "46.51.190.137"                 GOODIP

<LocationMatch "^/${vars:instanceid}/(profile.json|profile.csv|height)">

   Order Deny,Allow
   Deny from all

   Allow from env=GOODIP
   Allow from env=GOODREF

</LocationMatch>
