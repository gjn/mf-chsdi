#
# chsdi - Pylons production environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = false
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[app:main]
use = egg:chsdi
full_stack = true
static_files = false
api_version = ${api-version}

beaker.session.type = memory
beaker.cache.type = memory

# SQLAlchemy database URL
sqlalchemy.bod.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/bod
sqlalchemy.stopo.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/stopo
sqlalchemy.edi.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/edi
sqlalchemy.search.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/search
sqlalchemy.bafu.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/bafu
sqlalchemy.kogis.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/kogis
sqlalchemy.vbs.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/vbs
sqlalchemy.are.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/are
sqlalchemy.uvek.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/uvek
sqlalchemy.ivs2b.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/ivs2b
sqlalchemy.dritte.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/dritte
sqlalchemy.bak.url = postgresql://${vars:dbuser}:${vars:dbpassword}@${vars:dbhost}:${vars:dbport}/bak

dtm_path = /var/www/mf-chsdi/private/data/profile/
data_path = /var/local/cartoweb/

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false


# Logging configuration
[loggers]
keys = root, routes, chsdi, sqlalchemy

[handlers]
keys = wsgierrors

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = wsgierrors

[logger_routes]
level = WARNING
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_chsdi]
level = DEBUG  
handlers =
qualname = chsdi

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_wsgierrors]
class = pylons.log.WSGIErrorsHandler
args = ()
format = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
